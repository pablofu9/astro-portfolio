---
import SwiftIcon from "../components/icons/Swift.astro";
import FirebaseIcon from "../components/icons/Firebase.astro";
import GitHubIcon from "../components/icons/GitHub.astro";
import MapKitIcon from "../components/icons/MapKit.astro";
import MongoIcon from "../components/icons/Mongo.astro";
import RealmIcon from "../components/icons/Realm.astro";

const TAGS = {
    SWITFUI: {
        name: "SwiftUI",
        class: "bg-white ",
        icon: SwiftIcon,
    },
    FIREBASE: {
        name: "Firebase",
        class: "bg-white",
        icon: FirebaseIcon,
    },
    MAPKIT: {
        name: "MapKit",
        class: "bg-white",
        icon: MapKitIcon,
    },
    MONGO: {
        name: "MongoDB",
        class: "bg-white",
        icon: MongoIcon,
    },
    REALM: {
        name: "Realm",
        class: "bg-white",
        icon: RealmIcon,
    },


};
const PROJECTS = [
    {
        title: "Map finder",
        description: "An application, which is a mix between the Apple Maps map and the weather application. We use the UIKit map to show the selected places, the MKLocalSearcher to show search results based on the region in which the user is located Finally, we use the https://open-meteo.com api to show weather information for the selected place. We make our api calls using the dependency injection technique to make the application as modular as possible and to promote Clean Code. MVVM and Clean code pattern used throughout the app.",
        link: "#",
        github: "https://github.com/pablofu9/MapFinder",
        image: "/fastTeam.jpg",
        assets: ["/Home.jpg", "/Search.jpg", "/Place.jpg", "/Favorites.jpg", "/Weather.jpg"],
        tags: [TAGS.SWITFUI, TAGS.FIREBASE, TAGS.MAPKIT],
    },
    {
        title: "Share life",
        description: "This is an iOS application developed with SwiftUI, designed to manage shared living arrangements, both for couples and friends. Its primary goal is to enable household members to share vital information such as notes, calendars, work shifts, tasks, and shopping lists. The application has been developed using Realm, leveraging AtlasDB to host the database in the cloud. This setup allows data sharing without the need for web services, ensuring a seamless and efficient experience for users. Special emphasis has been placed on utilizing Realm and AtlasDB to provide robust, cloud-based data synchronization and storage solutions.",
        link: "#",
        github: "https://github.com/pablofu9/ShareLife",
        image: "/vista1.png",
        assets: ["/login.png","/vista1.png", "/vista2.png", "/vista3.png"],
        tags: [TAGS.SWITFUI, TAGS.REALM, TAGS.MONGO],
        video: "/videoShare.mov",
    }

    // {
    //     title: "PFlix",
    //     description:
    //         "Application thats uses TMBD to create a look alike netflix app",
    //     link: "#",
    //     github: "https://github.com/pablofu9/FastTeamIOs",
    //     image: "/fastTeam.jpg",
    //     tags: [TAGS.SWITFUI, TAGS.FIREBASE],
    // },
];
---

<div class="container mx-auto py-8 grid grid-cols-1  gap-8">
    {
        PROJECTS.map(({ title, description, tags, image, github,assets, video }) => (
            <article class="border rounded-lg p-4 bg-white bg-opacity-10 ">
                <div class="flex ">
                <h3 class="text-2xl font-semibold text-yellow-200 pr-4">
                    {title}
                </h3>
                <h2 class="rounded bg-gray-400/60 font-semibold text-red-400 p-1">
                    Building...
                </h2>
                </div>

                <p class="text-lg mb-4 text-pretty">{description}</p>
                <ul class="flex gap-x-2 flex-row mb-2">
                    {tags.map((tag) => (
                        <li>
                            <span
                                class={
                                    "flex gap-x-2 rounded-full  ${tag.class} py-1 px-4 bg-white text-red-300"
                                }
                            >
                                <tag.icon />
                                {tag.name}
                            </span>
                        </li>
                    ))}
                </ul>
                {video && (
                    <div class="container mx-auto py-8">
                        <video class="w-auto h-80" controls>
                            <source src={video} type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    </div>
                )}
                <div class="container mx-auto py-8 grid grid-cols-4 gap-4">
                
                
                     {assets?.map((asset) => (
                       
                            <span >
                                <img class="w-auto h-100"
			                    src= {asset}
			                    alt="Image"
			                    />
                            </span>
                       
                    ))}
              
                </div>
               
                <ul class="flex gap-x-2 flex-row mb-2">
                    <li>
                        <span
                            class={
                                "flex gap-x-2 rounded-full pr-2 py-2"
                            }
                        >
                            <span class={
                                "flex gap-x-2 rounded-full  ${tag.class} py-1 px-4 bg-white text-black hover:scale-105 transition border border-purple-400"
                            }>
                                <a href={github} class="flex gap-x-2">
                                    <GitHubIcon class="w-6 h-6" />
                                    Explore the code
                                </a>
                            </span>
                           
                        </span>
                    </li>
                </ul>
                {/* <img class="rounded shadow-white/20 hover-effect w-20 h-20" 
            src={image} 
            alt={title}/> */}
                {/* <a href={PROJECTS[0].link} class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity">
                    <button class="bg-white text-black py-2 px-4 rounded"><GitHubIcon class="w-6 h-6"/></button>
                </a> */}
            </article>
        ))
    }
    <div></div>
</div>
